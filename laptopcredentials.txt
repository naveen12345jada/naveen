laptop security credentials



username ---------- jadanaveen15020@gmail.com
password ----------  Naveen@12345


security pin ----- 2580


alexa credentials

phone number --- 8341596934
password----- Naveen@1234


ramadevi mail user name and password

username ----  ramadevi15020@gmail.com
password ----  Nrnsa1234


jadanaveen mail user name and password

username ---------- jadanaveen15020@gmail.com
password ----------  Naveen@1234

hp support user name and password 

username ------ jadanaveen15020@gmail.com
password ----------  Naveen@1234




git username and password

username==naveen12345jada  mailid----pasalaswapna3020@gmail.com
password=== Nrns@1234


to download a git project ---> go to ur repository you created  ---> click on code ---> download as zip and u locally u downloaded from remote 

if the images was not configured in googled during cloning from git hub check the
folder names and during downloading of project from git hub some extra folder names will be removed otherwise the images 
will not configured it will show error message

payslips password 

from jan to march ---- payroll id -129604
from april to october ---- date of birth
oracle id --169897

C:\Users\jadan\eclipse-workspace\javaproject\src\javaproject {projects will be saved in this path}

https://www.oracle.com/database/technologies/xe-prior-release-downloads.html (oracle database download)

oracle password for database login also
uname==sys
pssd==Nrns

note=== workspace username and password is ====xe

https://www.oracle.com/database/technologies/xe-prior-release-downloads.html            {oracle download link}


naukari login and password

user name : ramadevi15020@gmail.com
password : Naveen@1234


udemy mail----2113252@cognizant.com
  udemy password ---> NaRaNaSu@2580


zoom meeting app credentials
nareshit username : jadanaveen15020@gmail.com
password : Naveen@15020


Selenium @ 7:30 PM (IST) by Mr. Suresh_New_Link (26-12-2022).
Meeting Link : http://zoom.us/j/89761390414
Password: 293521
Admin: Mr. Shubham
URL: https://nareshit.zoom.us/meeting/register/tZ0qceirpzsuG9AF91ptAFY0QKVjzJUrqKZ-


Changed Naresh it Link

URL : https://classes.nareshit.com/login

Username: 9381525063
Password: 1a6947






allesc portal acess

URL: https://www.allsechro.com/smartpay/Alumnilogin
Company Code: PBC
Login Id: 129604
Password: Da348545



provident fund credentials 

uan no: 101766426617
password :Naveen@1234


postman credentials
username : jadanaveen
gmail:jadanaveen15020@gmail.com 
password:Naveen@1234

In case if your query is un-resolved for more than 10 days please 
drop a note to ganeshbabu.c@publicisresources.com (Mobile no. 9600006173)


Ui fullStack(8:30 Am)

https://nareshit.zoom.us/w/89452135656?tk=6tCA_MWW79kyGlECfDPLXdh4cQfugKUNH00ZWdB_h74.DQMAAAAU08NE6BZxOTV4VVU3RVI1aVlUdkNUNGpWbXlRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

Meeting Id : 894 5213 5656


Html ,css, JavaScript(7:30 Am)
https://nareshit.zoom.us/w/85282306168?tk=mtKNIltXgYnwCIX9cTXqNzhdNUh4vxzqKRIDbjS4YjE.DQMAAAAT2zi4eBZBRXZncXlTT1RsMnJ1NTYwZ2pUcVJ3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

Meeting ID:
852 8230 6168


testing

https://nareshit.zoom.us/w/82904188400?tk=4fPMVp-BI0cD0u8xlaezz0NKLP_DI9EjJJqCqQBDG9g.DQMAAAATTXmF8BZzMVBtbE1CSFRRaXdKMnAzQVFoSjVnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA#success


lic credentials
jadanaveen15020@gmail.com
Nrnsa@1234


https://screenrec.com/share/MPJqdzIkfB


UI Full Stack Web Development @ 8:30 AM (IST) by Mr. Durga Prasad
Day-1 https://youtu.be/mLxlJ8Tle2Y
Day-2 https://youtu.be/GhkXfrRmvmk
Day-3 https://youtu.be/az7LN000adY
Day-4 https://youtu.be/yD1eImIl2Yg
Naresh IT Dear Students Please complete your payment process if any doubts contact our admin through what's app


Mr Ramesh 9542994289 what's app 
This is not related to full stack java and full stack.net 





@getmessagebot---bot public

@save_content_bot----bot private


jenkins

username ====jadanaveenkumar15020
password ====Naveen@1234
FullName === JADA NAVEEN KUMAR


 ADMINISTRATOR PASSWORD ===02c35327e11941b8839fbdc7deeddc73
LOCAL ADMINISTRATOR URL FOR SEARCHING ADMINISTRATOR PASSWORD===C:\ProgramData\Jenkins\.jenkins\secrets\initialAdminPassword




username==naveen12345jada  mailid----pasalaswapna3020@gmail.com
password=== Nrns@1234

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--- password token for github incase of eclipse 

Under Repository access, select which repositories you want the token to access. You should choose the minimal repository access that meets your needs. Tokens always include read-only access to all public repositories on GitHub.{to remove error of the ecllipse while adding password token}

How do I add a password token to GitHub?
Under your GitHub user profile (not the repository profile), click the “Settings” link. Scroll down and click the “Developer Settings” link. Click the GitHub “Personal access tokens” link. Click the “Generate new token” link and provide your password again if required.



oracle 21c credentials 
password : hr
USERNAME : SYSTEM

WHEN YOU CREATE DB CONNECTION AUTOMATIC DEFAULT TABLES WILL BE SHOWN 






====== default branch creation in git hub =======

git hub commands error

PS C:\Users\jadan\OneDrive\Desktop\UI-FULLSTACK\Durgaui> git init
Reinitialized existing Git repository in C:/Users/jadan/OneDrive/Desktop/UI-FULLSTACK/Durgaui/.git/
PS C:\Users\jadan\OneDrive\Desktop\UI-FULLSTACK\Durgaui> git add .
PS C:\Users\jadan\OneDrive\Desktop\UI-FULLSTACK\Durgaui> git commit -m "first commit"
On branch master
nothing to commit, working tree clean
PS C:\Users\jadan\OneDrive\Desktop\UI-FULLSTACK\Durgaui> git branch -M main
PS C:\Users\jadan\OneDrive\Desktop\UI-FULLSTACK\Durgaui> git remote add origin https://github.com/naveen12345jada/UIFULLSTACK15020.git
error: remote origin already exists.
PS C:\Users\jadan\OneDrive\Desktop\UI-FULLSTACK\Durgaui> git remote remove origin   ==============(to remove this  error: remote origin already exists. we use this coommand)==============================
PS C:\Users\jadan\OneDrive\Desktop\UI-FULLSTACK\Durgaui> git remote add origin https://github.com/naveen12345jada/UIFULLSTACK15020.git
PS C:\Users\jadan\OneDrive\Desktop\UI-FULLSTACK\Durgaui> git push -u origin main
Enumerating objects: 4686, done.
Counting objects: 100% (4686/4686), done.
Delta compression using up to 12 threads
Compressing objects: 100% (4552/4552), done.
Writing objects:   6% (317/4686), 4.34 MiB | 619.00 KiB/s 






generation of ssh key


To generate an SSH key in GitHub, you can follow these steps:



Open the GitHub website and sign in to your account.

In the top-right corner of any page, click on your profile picture, and then click on "Settings" from the dropdown menu.

On the left sidebar of the settings page, click on "SSH and GPG keys."

Click on the "New SSH key" button.

In the "Title" field, provide a descriptive name for the SSH key to easily identify it.

Now, you need to generate the SSH key pair on your local machine. Open a terminal or command prompt.

Type the following command and replace <email@example.com> with your email address associated with your GitHub account:
css
Copy code
ssh-keygen -t rsa -b 4096 -C "<email@example.com>"

Press Enter to continue.

You will be prompted to enter a file to save the key. Press Enter to accept the default location (usually ~/.ssh/id_rsa).

Next, you will be prompted to enter a passphrase (a secure password) for the SSH key. You can choose to provide a passphrase or leave it blank for an unprotected key. Press Enter when you're done.

Two files will be generated: id_rsa (the private key) and id_rsa.pub (the public key).

Open the id_rsa.pub file with a text editor and copy its entire contents.

Go back to the GitHub website and paste the copied key into the "Key" field.

Finally, click on the "Add SSH key" button to save the key in GitHub.


Congratulations! You have successfully generated and added an SSH key to your GitHub account. Now you can use this SSH key to securely authenticate with GitHub repositories and services. 




pushing code error  for the  first time after ssh key generation  permission denied 


C:\Users\jadan\OneDrive\Documents\Camtasia\Custom Production Presets 22.0>git push -u origin main
The authenticity of host 'github.com (20.207.73.82)' can't be established.
ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes =======(you type keybord  yes  and click   enter  and it is mandtory otherwise error while first time running incase of ssh key generation incase pusing code in remote repository) ===================


Warning: Permanently added 'github.com' (ED25519) to the list of known hosts.
To github.com:naveen12345jada/naveen.git
 ! [rejected]        main -> main (fetch first)












"Remote Origin Already Exists" Error: Why Does It Happen?
Picture this: You're following a Git tutorial you've found online. So far everything works fine. Then, you see a line similar to the following one: 

git remote add origin <SOME-URL>/<SOME-REPOSITORY-NAME>.git

After trying to execute the command above, you get the infamous error message: 

fatal: remote origin already exists.

Understanding this message is actually easy. Unlike centralized VCSs, Git doesn't have a central server. In Git, you can have what we call remote repositories, or simply remotes. Remotes represent repositories that you might have read and/or write access to. Those are usually on machines other than your own, and you access them via SSH or HTTP. Keep in mind that, despite the name, remotes aren't necessarily located on remote machines: despite sounding like an oxymoron, local remotes are totally possible. 


Remotes have names to identify them, and you can have as many remotes per repository as you need or want. However, you can't have two remotes with the same name. So if you try to add a remote with the same name as an already existing remote, boom! Fatal error. 

If you want to be really sure the remote called origin actually exists, you can easily check that by running the following command: 

git remote

That will make your Git list all existing remotes for the current repository. If you want to get more detail, you can add the verbose parameter with the remote command, like this: 

git remote -v

That will return not only the names of each remote but also its URLs:


By the way, the message will not always contain the actual word "origin." Let's say you're trying to add a remote called cloudbees but there's already a remote with that name. In this case, the error message would say: 

fatal: remote cloudbees already exists.

Similarly to the way that the default branch in Git is called controller—though that could change in the near future—the default remote is called origin, but you could name it anything you like as long as it's a legal name in Git. 

Solving the "Remote Origin Already Exists" Error in Four Different Ways
Having explained why the error message happens, we'll now cover some of the several potential solutions you can use to solve the problem. Keep in mind that the solution you'll use will depend on your specific situation because there are a few different scenarios that can cause this problem to happen. 

1. Remove the Existing Remote
The first scenario we'll cover is the one in which there's already a remote called origin, but it's the wrong remote for some reason. Let's say, for the sake of the example, that you used to use GitLab for storing your repositories online and then decided to switch over to GitHub (or vice versa). To go about that, you could follow the steps below: 

Create a new repository online using GitHub or GitLab.

Go to your local repository and remove the existing origin remote.

Add the new online repository as the correct origin remote.

Push your code to the new origin.

If, for some reason, you skip step #2, that will cause Git to display the "remote origin already exists" message. So a possible solution here would be simply removing the existing remote: 

git remote remove origin

As explained before, origin is just a name for a remote. It could be a different name for you. To make sure the remote is indeed deleted, you can use the Git remote command you saw earlier. Then, if everything is all right, you can go on to adding the desired remote. 

2. Update the Existing Remote's URL
We've just shown you how to remove an existing remote, so you can hopefully add a new one, this time with the correct URL. However, you might be thinking that removing the remote and adding it again with a different link will have an eerily similar result as updating the URL of the existing remote. If that's the case, you're right, of course. 

So let's see how to achieve the same result we got in the previous section but in a faster way. You just have to use a single command: 

git remote set-url <REMOTE-NAME> <NEW-URL>

As we've said before, we keep talking about origin throughout this post, but there's nothing preventing you from working with whatever remote names you feel like. So a complete example with origin as the remote name and a URL to a real repo could look like this: 

git remote set-url origin https://github.com/git/git.git

3. Rename the Existing Remote
Let's say that, for whatever reason, you already have a remote called origin. You want to add a new origin, but you also need to keep the old one. How would you go about it? 

Easy. Rename the existing remote before adding the new one. Just run the following command and you're set: 

git remote rename <old-name> <new-name>

So let's say you want to rename your origin remote to backup. You'd simply run: 

git remote rename origin backup

Then you can add your new remote called origin normally, and you should no longer see the "remote origin already exists" error. 

4. Do Nothing!
This is not a joke, I promise you. Here's the thing: Sometimes, you might get the "remote origin already exists" error when following a tutorial that has some step asking you to add a remote called origin. If you try to run the command and get the error message, it's possible that you've already executed that command and don't remember. 

To check whether that's really the case, you can use the Git remote command with the verbose option, as we've covered before: 

git remote -v

That will allow you to see the existing remotes along with the URLs they point to. If the existing remote already has the same URL provided by the tutorial, that means your repo is ready to go and you don't need to do anything else. 

"Remote Origin Already Exists" Scaring You? A Thing of the Past
Git is an essential tool in the modern software developer's tool belt. Unfortunately, many developers consider Git a hard tool to learn. There's some truth to those claims. Though the basic Git commands you'll use most of the time are easy to learn and understand, you might stumble upon a particularly difficult aspect of the tool from time to time. For instance, you might find yourself with a somewhat bizarre error message. Or the various ways in which Git allows you to go back and change things might trip you up a bit. 


In today's post, we've covered a fairly common Git error message. Hopefully, you're now ready to address this error when it comes your way. 

If there's one takeaway you get from this post, we hope it's this: Even though Git can sometimes feel daunting, it's actually not that hard once you get used to some of its UI quirks and get somewhat familiar with its fundamentals. So keep studying and keep practicing, and then using Git will feel like second nature in no time. 













To add files to an existing repository both default as well as custom branch , you can use the following commands:






Microsoft Windows [Version 10.0.22621.1848]
(c) Microsoft Corporation. All rights reserved.

C:\Users\jadan\OneDrive\Desktop>git init
Reinitialized existing Git repository in C:/Users/jadan/OneDrive/Desktop/.git/

C:\Users\jadan\OneDrive\Desktop>git add laptopcredentials.txt

C:\Users\jadan\OneDrive\Desktop>git commit -m "Add files"
[laptopcredntialandgithubcode 4b926ff] Add files
 1 file changed, 61 insertions(+), 18 deletions(-)

C:\Users\jadan\OneDrive\Desktop>git remote add origin git@github.com:naveen12345jada/notepadfiles.git
error: remote origin already exists.

C:\Users\jadan\OneDrive\Desktop>git remote remove origin

C:\Users\jadan\OneDrive\Desktop>git remote add origin git@github.com:naveen12345jada/notepadfiles.git

C:\Users\jadan\OneDrive\Desktop>git push origin laptopcredntialandgithubcode
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 12 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 1.09 KiB | 1.09 MiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To github.com:naveen12345jada/notepadfiles.git
   7a1d0de..4b926ff  laptopcredntialandgithubcode -> laptopcredntialandgithubcode

















===== in theoritcal way of To add files to an existing repository both default as well as custom, you can use the following commands: =======





Initialize Git in the repository (if not already done):



git init


Add the files you want to include in the next commit:



git add <file1> <file2> ... <fileN>

You can specify individual file names or use patterns to add multiple files at once. For example, git add . adds all files in the current directory.



Check the status of the repository to verify that the files are staged for commit:





git status

The output will show the files you have added.



Commit the changes with a descriptive message:



git commit -m "Add files"

Replace "Add files" with your own meaningful commit message.



If you haven't set up a remote repository, you can do so using the following command:



git remote add origin <remote_repository_url>

Replace <remote_repository_url> with the URL of your remote repository.



Push the changes to the remote repository:



git push origin <branch_name> (directly u have to give 

Replace <branch_name> with the name of the branch you want to push the changes to, typically "master" or "main".


After executing these commands, the files will be added to the existing repository, and the changes will be visible in the remote repository.









======= creation of different branch and how to add code in the same repository  adding parllely to code into different branch creatiuon ========





Microsoft Windows [Version 10.0.22621.1848]
(c) Microsoft Corporation. All rights reserved.

C:\Users\jadan\OneDrive\Desktop\javaprogramming>git init
Reinitialized existing Git repository in C:/Users/jadan/OneDrive/Desktop/javaprogramming/.git/

C:\Users\jadan\OneDrive\Desktop\javaprogramming>git remote add origin git@github.com:naveen12345jada/ravaliui.git
error: remote origin already exists.

C:\Users\jadan\OneDrive\Desktop\javaprogramming>git remove remote origin
git: 'remove' is not a git command. See 'git --help'.

The most similar command is
        remote

C:\Users\jadan\OneDrive\Desktop\javaprogramming>git remote remove origin

C:\Users\jadan\OneDrive\Desktop\javaprogramming>git remote add origin git@github.com:naveen12345jada/ravaliui.git

C:\Users\jadan\OneDrive\Desktop\javaprogramming>git checkout -b newbranch (no need to create a branch in the git and directly give name in the checkout it wii automaticall creates branch)
Switched to a new branch 'newbranch'

C:\Users\jadan\OneDrive\Desktop\javaprogramming>git add .

C:\Users\jadan\OneDrive\Desktop\javaprogramming>git commit -m "First commit"
On branch newbranch
nothing to commit, working tree clean

C:\Users\jadan\OneDrive\Desktop\javaprogramming>git push origin newbranch
Enumerating objects: 12, done.
Counting objects: 100% (12/12), done.
Delta compression using up to 12 threads
Compressing objects: 100% (12/12), done.
Writing objects: 100% (12/12), 2.36 KiB | 2.36 MiB/s, done.
Total 12 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), done.
remote:
remote: Create a pull request for 'newbranch' on GitHub by visiting:
remote:      https://github.com/naveen12345jada/ravaliui/pull/new/newbranch
remote:
To github.com:naveen12345jada/ravaliui.git
 * [new branch]      newbranch -> newbranch




==========delete a branch in git hub=========


in git hub first click on code and  to delete a branch in a repository click on branches on the beside of dropdown branches







======   creation of different branch adding single particular  file in the existing repository in different branch or our own branch or custom branch  =====

Microsoft Windows [Version 10.0.22621.1848]
(c) Microsoft Corporation. All rights reserved.

C:\Users\jadan\OneDrive\Desktop>git init
Initialized empty Git repository in C:/Users/jadan/OneDrive/Desktop/.git/

C:\Users\jadan\OneDrive\Desktop>git remote add origin git@github.com:naveen12345jada/notepadfiles.git

C:\Users\jadan\OneDrive\Desktop>git add laptopcredentials.txt

C:\Users\jadan\OneDrive\Desktop>git checkout -b laptopcredntialandgithubcode  ====== creation of another branch in repository in git hub==========
Switched to a new branch 'laptopcredntialandgithubcode'

C:\Users\jadan\OneDrive\Desktop>git commit -m "first commit"
[laptopcredntialandgithubcode (root-commit) 581ad0f] first commit
 1 file changed, 541 insertions(+)
 create mode 100644 laptopcredentials.txt

C:\Users\jadan\OneDrive\Desktop>git push origin laptopcredntialandgithubcode
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 12 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 7.48 KiB | 7.48 MiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'laptopcredntialandgithubcode' on GitHub by visiting:
remote:      https://github.com/naveen12345jada/notepadfiles/pull/new/laptopcredntialandgithubcode
remote:
To github.com:naveen12345jada/notepadfiles.git
 * [new branch]      laptopcredntialandgithubcode -> laptopcredntialandgithubcode

C:\Users\jadan\OneDrive\Desktop>


















===adding the same file with modifications in the file with same branch and same repository ====





icrosoft Windows [Version 10.0.22621.1848]
(c) Microsoft Corporation. All rights reserved.

C:\Users\jadan\OneDrive\Desktop>git init
Reinitialized existing Git repository in C:/Users/jadan/OneDrive/Desktop/.git/

C:\Users\jadan\OneDrive\Desktop>git remote add origin git@github.com:naveen12345jada/notepadfiles.git
error: remote origin already exists.

C:\Users\jadan\OneDrive\Desktop>git remote remove origin  =======( to remove this error error: remote origin already exists.)========

C:\Users\jadan\OneDrive\Desktop>git remote add origin git@github.com:naveen12345jada/notepadfiles.git

C:\Users\jadan\OneDrive\Desktop>git branch -M laptopcredntialandgithubcode  ===========(switching to this already created branch )===========

C:\Users\jadan\OneDrive\Desktop>git pull --rebase origin laptopcredntialandgithubcode ==== error without doing add and commiting ========
error: cannot pull with rebase: You have unstaged changes.
error: please commit or stash them.

C:\Users\jadan\OneDrive\Desktop>git add laptopcredentials.txt   ======= adding the file to remote repository =======

C:\Users\jadan\OneDrive\Desktop>git commit -m "first commit  ======== doing commit =======
[laptopcredntialandgithubcode 7a1d0de] first commit
 1 file changed, 59 insertions(+)

C:\Users\jadan\OneDrive\Desktop>git pull --rebase origin laptopcredntialandgithubcode ====== taking pull from the remote in that file has already code and adding our code to that same file === 
From github.com:naveen12345jada/notepadfiles
 * branch            laptopcredntialandgithubcode -> FETCH_HEAD
 * [new branch]      laptopcredntialandgithubcode -> origin/laptopcredntialandgithubcode
Current branch laptopcredntialandgithubcode is up to date.

C:\Users\jadan\OneDrive\Desktop>git push origin laptopcredntialandgithubcode  ==== finally pushing ====
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 12 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 794 bytes | 794.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To github.com:naveen12345jada/notepadfiles.git
   581ad0f..7a1d0de  laptopcredntialandgithubcode -> laptopcredntialandgithubcode




net banking cus id and password 

customer id : 181998075 
password : Jnk@1234







To remove all untracked files, whether they are ignored or not, use the command git clean -f -x instead. 
The -x option removes all untracked files, including ignored files


git checkout -b laptopcredntialandgithubcode  ====== creation of another branch in repository in git hub==========
git branch -M laptopcredntialandgithubcode  ===========(switching to this already created branch )===========
C:\Users\jadan\OneDrive\Desktop>git pull --rebase origin laptopcredntialandgithubcode ====== taking pull from the remote in that file has already code and adding our code to that same file === 






git checkout -b laptopcredntialandgithubcode  ====== creation of another branch in repository in git hub==========
Switched to a new branch 'laptopcredntialandgithubcode'
